{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/layout.js","webpack:///./src/images/sid-the-builder.png"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","react_typist__WEBPACK_IMPORTED_MODULE_2__","react_typist__WEBPACK_IMPORTED_MODULE_2___default","react_icons_fa__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","Container","styled","div","withConfig","displayName","componentId","Greetings","ImageContainer","IndexPage","a","createElement","title","keywords","size","className","avgTypingDelay","cursor","show","blink","hideWhenDone","hideWhenDoneDelay","color","src","require","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","textDecoration","footer","Footer","Date","getFullYear","Layout","Fragment","layout_Container","components_Footer","_755544856","node","p"],"mappings":"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","file":"component---src-pages-index-js-13393ff5a036df62ed46.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Typist from 'react-typist'\nimport { FaWrench, FaHeart, FaLaptopCode } from 'react-icons/fa'\n\nimport Layout from '../components/layout'\n// TODO: use this below\n// import Image from '../components/image'\nimport SEO from '../components/seo'\n\nconst Container = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  max-width: 50vw;\n  @media screen and (max-width: 720px) {\n    max-width: 80vw;\n  }\n`\n\nconst Greetings = styled.div`\n  text-align: center;\n  margin-top: 1rem;\n  .Typist {\n    display: block;\n    font-size: 3rem;\n    margin: 1em 0em;\n    line-height: 1.5;\n  }\n`\n\nconst ImageContainer = styled.div`\n  img {\n    margin: 0 auto;\n  }\n`\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO\n      title='Home'\n      keywords={[`gatsby`, `application`, `react`, 'Sid Bentifraouine']}\n    />\n    <Container>\n      <Greetings>\n        <b>NOTE</b>: Work in progress <FaWrench size={23} />\n        <Typist\n          className='Greetings'\n          avgTypingDelay={100}\n          cursor={{\n            show: true,\n            blink: true,\n            hideWhenDone: true,\n            hideWhenDoneDelay: 3000\n          }}\n        >\n          Hi, I'm Sid Bentifraouine\n        </Typist>\n        <p>\n          I'm a Frontend Engineer who loves learning and sharing new things with\n          love. <FaHeart size={25} color='red' />\n        </p>\n      </Greetings>\n      <ImageContainer>\n        <img src={require('../images/sid-the-builder.png')} />\n      </ImageContainer>\n    </Container>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.footer`\n  align-self: end;\n  background-color: #001f3f;\n  width: 100vw;\n  height: 10vh;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px -2px 4px rgba(0, 0, 0, 0.2);\n  p {\n    color: white;\n    margin: 0;\n    padding: 0;\n    a {\n      text-decoration: none;\n      color: white;\n      font-weight: bold;\n    }\n  }\n`\n\nconst Footer = () => {\n  return (\n    <Container>\n      <p>© {new Date().getFullYear()}, Sid Bentifraouine</p>\n    </Container>\n  )\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Header from './header'\nimport './layout.css'\nimport Footer from './Footer'\n\nconst Container = styled.div`\n  display: grid;\n  justify-items: center;\n  height: 100vh;\n  grid-gap: 4rem 0;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        <Container>\n          <main>{children}</main>\n          <Footer />\n        </Container>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/sid-the-builder-ea87a6ca94a70bb13bf4bbfb63ce0e71.png\";"],"sourceRoot":""}